name: BPCA_CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./bp-master/BPCalculator
    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: ./bp-master/BPCalculator
    - name: Test
      run: dotnet test --no-build --verbosity normal
      working-directory: ./bp-master/BPCalculator
    - name: Run unit tests
      run: dotnet test ./bp-master/BloodPressureUnitTests\BloodPressureUnitTests.csproj --verbosity normal
    - name: Run Specflow tests
      run: dotnet test ./bp-master/SpecFlowBloodPressureTests\SpecFlowBloodPressureTests.csproj --verbosity normal
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
       java-version: 1.11
    - uses: actions/checkout@v2
      with:
       fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis  
    - name: Cache SonarQube packages
      uses: actions/cache@v1
      with:
       path: ~\sonar\cache
       key: ${{ runner.os }}-sonar
       restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarQube scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
       path: .\.sonar\scanner
       key: ${{ runner.os }}-sonar-scanner
       restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarQube scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
       New-Item -Path .\.sonar\scanner -ItemType Directory
       dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      shell: powershell
      run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"BloodPressureSonar" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
