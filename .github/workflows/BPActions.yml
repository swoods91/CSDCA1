name: BPCA_CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
      with:
       fetch-depth: 0
       
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      working-directory: BPCalculator
    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: BPCalculator
      
    - name: Run unit tests
      run: dotnet test BloodPressureUnitTests/BloodPressureUnitTests.csproj --verbosity normal
      
    - name: Run Specflow tests
      run: dotnet test SpecFlowBloodPressureTests/SpecFlowBloodPressureTests.csproj --verbosity normal
    
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
       fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
        
    - name: Restore dependencies
      run: dotnet restore
      working-directory: BPCalculator
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      working-directory: BPCalculator
      
    - name: Sonarqube Begin
      run: | 
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /o:"swoods91" /k:"swoods91_CSDCA1" /d:sonar.login=${{ secrets.SONAR_TOKEN }} /s:$GITHUB_WORKSPACE/SonarQube.Analysis.xml

    - name: Build
      run: dotnet build

    - name: Test with the dotnet CLI
      run: dotnet test --settings coverlet.runsettings --logger:trx
      env:
       ASPNETCORE_ENVIRONMENT: Development

    - name: Sonarqube end
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: snyk/actions/setup@master
      - uses: actions/setup-go@v1
        with:
          go-version: '1.13'
      - name: Snyk monitor
        run: snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
  k6_load_test:
      name: k6 Load Test
      runs-on: ubuntu-latest

      steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Run local k6 test
        uses: k6io/action@v0.1
        with:
         filename: BloodPressure.cs   
